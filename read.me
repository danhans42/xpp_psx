==================================================
    xpp v0.1 - xplorer control utility
==================================================

 by danhans42

 Simple app that can talk to an Xplorer/Xploder cart. It works with both PSX and N64 varieties, on 
 all known firmware versions. N64 is however very limited on what it will work with (only two commands).

 As this code evolves, it should tidy up naturally and will start to have more Unirom+XP specific funtions

 sketchy - but works. Only meant as a test to see if it was straightforward, and as a 
 testbed for something ESP32 based.

 Works on all 40pin GPIO Raspberry Pis that are compatible with WiringPi. 

 You can probably try this on anything WiringPi has been ported to with minimal effort - mileage may vary.


 Parts Shopping List
 ===================
 
 [ ] PSX/N64 [of course]
 [ ] Xplorer Cart of some description
 [ ] RaspberryPi (ZeroW is ideal) running Linux (only tested on raspbian-minimal)
 [ ] Level shifters (possibly - see hardware)
 [ ] F-F Dupont leads for wiring up ( 14 if running 3.3v/XP64 or ~32 for level shifters)  



 Hardware
 ========

 look at xpp.h for the pin assignments. Wire up via level shifters (observe signal direction
 if not bidirectional).

 Alternatively cut the VCC pins to Xplorer 74HC373/74HC245 and connect to +3.3v pin on the PCB/PIO
 connector solder joint. I have done this mod, and it still works with my parallel port perfectly
 on my machine. However do this at your own risk.

 If you only want Xplorer64.. it uses 3.3v levels on its DB25 - so no level shiftery needed there.

 Do not try and be a hero and run the rasberry pi without the +3.3v mod or level shifters.. Pi GPIO
 is not 5v tolerant



 Building 'xpp'
 ============== 

 On your Pi ensure you have wiringpi installed - do an 'sudo apt get wiringpi' before building
 run ./build.sh to build

 Ensure you dont have any pins enabled that we are going to use. I recommend making sure SPI/I2C is
 disabled. You can configure this with 'sudo raspi-config' in the interface menu.
 


 Compatibility Matrix
 ====================

 Xplorers are funny fuckers - some stuff works on some versions and not on others. See below for a guide.
 Im far too lazy to try and detect this prior to doing anything. See below for detail

 
 Command					Cart Model/ROM
 see /help for more info			XPFX4.2	XPP2.0	XP_1.9	XP_64	UNIROM+XP XFLASH
 ========================================================================================================     		                	
 /status					*	*	*	*	*	  ?
 /mcstatus*					*	X	X	X	X	  ?
 /reboot 					*	*	*	X	* 	  ?
 /freeze*                               	*	*	*	X	X  	  ?
 /unfreeze*					*	*	*	X	X	  ?
 /peek <address> 				*	*	*	X	*	  ?
 /view <address> 				*	*	*	X	*	  ?
 /upload <binfile> 				*	*	*	X	*	  ?
 /download <outfile> <address> <length>		*	*	*	X	*	  ?
 /execbin <binfile> <address>			*	*	*	*	X	  ?
 /exe <psxexe>					*	*	*	X	*	  ?
 /flash <romfile> 				?	?	?	?	?	  ?
 =======================================================================================================
   * = Tested OK     X = Incompatible     ? Untested



 !!! EEPROM FLASHING (/flash) WARNING !!!
 ========================================

 Beware with flashing using original FCD/Blaze ROMS - and ffs on Xplorer64 dont do it unless you have 
 means of recovery! 

 Unirom works perfectly well, with checksum on sent data HOWEVER, make absolutely sure the rom you are 
 sending is an actual legit ROM and also is compatible or it may not end well.. xpp will let you flash
 a jpeg of your nan provided it fits - so be careful!

 If you are using an PSX and original Xplorer ROM, I would recommend sending unirom_xpb.exe over first using /exe,
 then flashing your desired ROM.. its much more reliable!

 Limitations
 ===========

 Xplorer64 - When uploading code be mindful that the xplorer64 software loads at the normal rom address, so
 ensure you load above the first 256k or so of RAM..
 
 Xplorer 1.9x - Loads to the top of RAM, so usual stuff works fine running from 0x80010000
 FX4.2 seems to load at 80010000, so make sure you load your code above that - most stuff
 doesnt work for this I am afraid.. workaround again is to send over unirom_xpb to one of these
 with the /exe command, and then run your exes as this loads higher up in RAM, allowing normal
 code compiled to run from 0x80010000 normally.

 
 
